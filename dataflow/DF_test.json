{
	"name": "DF_test",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ABLB_IN",
						"type": "DatasetReference"
					},
					"name": "ABLB"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ABLB_IN",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_ABLB_IN",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "filter2"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as integer,",
				"          title as string,",
				"          genres as string,",
				"          year as short,",
				"          Rating as short,",
				"          {Rotton Tomato} as short,",
				"          Address as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ABLB",
				"ABLB filter(year > 1900 && year < 1918) ~> filter1",
				"sort1 keyGenerate(output(rownum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"filter1 sort(desc(Rating, true)) ~> sort1",
				"surrogateKey1 filter(rownum==1) ~> filter2",
				"filter2 select(mapColumn(",
				"          Address,",
				"          rownum",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}