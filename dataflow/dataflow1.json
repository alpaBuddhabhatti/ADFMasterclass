{
	"name": "dataflow1",
	"properties": {
		"folder": {
			"name": "lab3"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ABLB_IN",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ADLG_OUT",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "LS_ASQL",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "SplitLast"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {_col0_} as integer,",
				"          {_col1_} as string,",
				"          {_col2_} as string,",
				"          {_col3_} as short,",
				"          {_col4_} as short,",
				"          {_col5_} as short,",
				"          {_col6_} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:[('m1.csv')]) ~> source1",
				"source1 derive(HouseNo = split({_col6_},',')[1],",
				"          BuildingName = split({_col6_},',')[2],",
				"          Postcode = split({_col6_},',')[3],",
				"          City = split({_col6_},',')[4],",
				"          Testing = 'This is testing') ~> SplitLast",
				"SplitLast select(mapColumn(",
				"          id = {_col0_},",
				"          name = {_col1_},",
				"          type = {_col2_},",
				"          rank = {_col3_},",
				"          year = {_col4_},",
				"          HouseNo,",
				"          BuildingName,",
				"          Postcode,",
				"          City,",
				"          Testing",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[('FirstDataFlow.csv')],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          id,",
				"          name,",
				"          type,",
				"          rank,",
				"          year,",
				"          HouseNo,",
				"          City",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id,",
				"          name,",
				"          type,",
				"          rank,",
				"          year,",
				"          Postcode,",
				"          HouseNo",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}